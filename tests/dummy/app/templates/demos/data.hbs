<h2>Data</h2>

<p>This form has data pre-filled in its fields, provided apart from its schema.</p>
{{dynamic-form schema=model.basicModel data=model.data}}

<hr/>

<p>The dynamic-form component also takes a data parameter to populate fields. The component will attept to populate any field that has a matching key in the data object.</p>
<p>Below we will take our basic schema and add a data object to populate fields.</p>

{{#highlight-js}}
  <pre>/app/routes/demos/data.js<code>import Ember from 'ember';
const basicSchema = {
  "schema": {
    "title":"User Feedback",
    "description":"What do you think about Alpaca?",
    "type":"object",
    "properties": {
      "name": {
        "type":"string",
        "title":"Name"
      },
      "feedback": {
        "type":"string",
        "title":"Feedback"
      },
      "ranking": {
        "type":"string",
        "title":"Ranking",
        "enum":['excellent','ok','so so']
      }
    }
  },
  "options": {
    "focus":false,
    "helper": "Tell us what you think about Alpaca!",
    "fields": {
      "name": {
        "size": 20,
        "helper": "Please enter your name.",
        "placeholder": "Enter your name"
      },
      "feedback" : {
        "type": "textarea",
        "rows": 5,
        "cols": 40,
        "helper": "Please enter your feedback."
      },
      "ranking": {
        "type": "select",
        "helper": "Select your ranking.",
        "optionLabels": ["Awesome!", "It's Ok", "Hmm..."]
      }
    }
  }
};

export default Ember.Route.extend({
  model() {
    const data = Ember.Object.create({
      name: 'Todd Jordan',
      feedback: 'Ember + Alpaca = Awesome',
      ranking: 'excellent'
    });
    return {
      basicSchema,
      data
    }
  }
});</code></pre>
{{/highlight-js}}

{{#highlight-js}}<pre>/app/templates/demos/data.hbs<code>\{{dynamic-form schema=model.basicSchema data=model.data}}</code></pre>{{/highlight-js}}

